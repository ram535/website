<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ram535.github.io</title>
    <link>https://ram535.github.io/website/post/</link>
    <description>Recent content in Posts on ram535.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Oct 2017 11:55:01 +0200</lastBuildDate>
    
	<atom:link href="https://ram535.github.io/website/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setting up an Angular Dart Project</title>
      <link>https://ram535.github.io/website/post/setting_angular_dart/</link>
      <pubDate>Mon, 09 Oct 2017 11:55:01 +0200</pubDate>
      
      <guid>https://ram535.github.io/website/post/setting_angular_dart/</guid>
      <description>First we are going to install stagehand program using the pub package manager.
pub global active stagehand Pubâ€™s global option allows you to run Dart scripts from the command line when you are not currently inside a package. Now run pub global list to see all the install global package.
stagehand 1.1.6 In this case there is only one packages install. stagehand generates the scaffolding of the project you choose for example a simple web app, an angular app, etc.</description>
    </item>
    
    <item>
      <title>Flutter Hello World</title>
      <link>https://ram535.github.io/website/post/flutter_hello_world/</link>
      <pubDate>Thu, 05 Oct 2017 14:46:50 +0200</pubDate>
      
      <guid>https://ram535.github.io/website/post/flutter_hello_world/</guid>
      <description>To install flutter follow this steps:
 clone the repo add the path on your machine (adjust the path that correspond to your machine)  export PATH=$HOME/bin/flutter/bin:$PATH  run flutter doctor to see if there are any dependencies you need to install to complete the setup  Now let&amp;rsquo;s create a flutter project
flutter create flutter_hello_world We can use a simulator or a divice to test the demo app. For me is more easy to do it in actual device because is faster than using a simulator.</description>
    </item>
    
    <item>
      <title>Dart Completion in Neovim using Language Server Protocol</title>
      <link>https://ram535.github.io/website/post/neovimlsp/</link>
      <pubDate>Wed, 19 Apr 2017 12:33:39 +0200</pubDate>
      
      <guid>https://ram535.github.io/website/post/neovimlsp/</guid>
      <description>In this short and simple tutorial we will add Dart completion to Neovim using Language Server Protocol.
First of all I will suppose that you already have install Neovim and Dart in your machine.
List of programs that we will need:  dart_language_server LanguageClient-neovim (Neovim Plugin) nvim-completion-manager (Neovim Plugin)  Step 1. Install dart_language_server Since we already have Dart installed, we can install dart_language_server with this command:
pub global activate dart_language_server Add the .</description>
    </item>
    
  </channel>
</rss>